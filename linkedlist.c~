#include "monty.h"
/**
 *add_dnodeint - add a new node
 *@head:head of the current list
 *@n: value new node list
 *Return: address of new element
 */
stack_t *add_dnodeint(stack_t **head, const int n)
{
stack_t *newnode;

if (head == NULL)
return (NULL);
newnode = malloc(sizeof(stack_t));
if (newnode == NULL)
return (NULL);

newnode->n = n;

if (*head == NULL)
{
newnode->next = NULL;
newnode->prev = NULL;
}
else
{
newnode->next = *head;
newnode->prev = NULL;
(*head)->prev = newnode;
}
*head = newnode;
return (newnode);
}


/**
 *add_dnodeint_end - add new node at the end of a linked list
 *@head: the head of the list
 *@n: value to be added
 *Return: new node at the end
 */
stack_t *add_dnodeint_end(stack_t **head, const int n)
{
  stack_t *newnode;
  stack_t *tmp;

  newnode = malloc(sizeof(stack_t));
  if (newnode == NULL)
    return (NULL);

  newnode->n = n;
  newnode->next = NULL;
  if (*head == NULL)
    {
      newnode->prev = NULL;
      *head = newnnode;
    }
  else
    {
      tmp = *head;
      while(tmp->next != NULL)
	tmp = tmp->next;

      newnode->prev = tmp;
      tmp->next = newnode;
    }
  return (newnode);
